version: "3.7"
services:
  db:
    image: mariadb:10.9.4
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MARIADB_ROOT_PASSWORD=$DB_PASS
      - MYSQL_PASSWORD=$DB_PASS
    ports:
      - $DB_PORT:$DB_PORT
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d #Crear las tablas automaticamente al iniciar
      - ./mysql:/var/lib/mysql #Mantener la misma data de mi base de datos local
    command: mysqld --sql-mode="" #Si no se pone esta opcion al al intentar cargar los property_id que son un UUID los toma con un numero+    
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MARIADB_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10

  app:
    depends_on:
      - api
    build: 
      context: ./
      dockerfile: ./app/Dockerfile
    env_file:
      - .env
    ports:
      - "80:80"
    network_mode: "host"
    volumes:
      - ./app/tests:/app/tests
      - ./app/src:/app/src

  api:
    depends_on:
      db:
        condition: service_healthy
    build: 
      context: ./
      dockerfile: ./api/Dockerfile
    env_file: ./.env
    environment:
      - HOST=localhost
    ports:
      - $API_PORT:$API_PORT
    network_mode: "host"
    volumes:
      - ./api/actions.json:/go/app/api/actions.json

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./debug/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-admin-api"
    depends_on:
      - node-exporter
      - cadvisor
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=$DASHBOARD_PASSWORD
    volumes:
      - ./debug/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    links:
      - prometheus:prometheus
    user: "$UID:$GID"
